import pytest
from path_with_maximum_gold import Solution


@pytest.mark.parametrize(
    "grid, expected",
    [
        ([[0]], 0),
        ([[10]], 10),
        ([[1, 2]], 3),
        ([[0, 6, 0], [5, 8, 7], [0, 9, 0]], 24),
        ([[1, 0, 7], [2, 0, 6], [3, 4, 5], [0, 3, 0], [9, 0, 20]], 28),
        ([[0, 0, 0, 0], [0, 10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 20]], 20),
        ([[0, 0, 0], [0, 5, 0], [0, 0, 0]], 5),
        ([[0, 4, 0], [0, 0, 0], [3, 0, 0]], 4),
        ([[1, 2, 3, 4, 5]], 15),
        ([[1], [2], [3], [4], [5]], 15),
        ([[0, 0, 0], [0, 0, 0], [0, 0, 0]], 0),
        (
            [
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100],
            ],
            100,
        ),
    ],
)
def test_get_maximum_gold(grid: list[list[int]], expected: int) -> None:
    solution = Solution()
    assert solution.getMaximumGold(grid) == expected
